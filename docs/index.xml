<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>The Rocker Project on Rocker Project</title>
    <link>/</link>
    <description>Recent content in The Rocker Project on Rocker Project</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>The Rocker Images: choosing a container</title>
      <link>/images/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/images/</guid>
      <description>The rocker project provides a collection of containers suited for different needs. find a base image to extend or images with popular software and optimized libraries pre-installed. Get the latest version or a reproducibly fixed environment.
The versioned stack   image description size metrics build status     r-ver Specify R version in docker tag. Builds on debian:stable      rstudio Adds rstudio      tidyverse Adds tidyverse &amp;amp; devtools      verse Adds tex &amp;amp; publishing-related packages      geospatial Adds geospatial libraries       This stack builds on stable Debian releases (debian:8 for versions &amp;lt; 3.</description>
    </item>
    
    <item>
      <title>Working with containers</title>
      <link>/use/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/use/</guid>
      <description>&amp;nbsp; Shared Volumes A common configuration with Rocker containers is to share volumes between the container and the host filesystem. This allows the container to access and modify local files in directories you specify. In this way, the container can be treated as ephemeral while files you create will persist after the container is destroyed. Because the container only has access to files within the directories you specify, this can also prevent a user from accidentally modifying unrelated files on the file system when using software inside the container.</description>
    </item>
    
  </channel>
</rss>